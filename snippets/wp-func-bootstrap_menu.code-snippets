{
	"wp-func-bootstrap_menu": {
		"prefix": "wp-func-bootstrap_menu",
		"body": [
			"if (!class_exists('bootstrap_menu')) {",
			"// внутри вывод",
			"class bootstrap_menu extends Walker_Nav_Menu {",
			"// параметр который будет определять раскрывать субменю",
			"//при наведении или оставить по клику как в стандартном бутстрапе",
			"private $2open_submenu_on_hover;",
			"// в конструкторе",
			"function $1__construct($2open_submenu_on_hover = true) {",
			"// запишем параметр раскрывания субменю",
			"$2this->open_submenu_on_hover = $2open_submenu_on_hover;",
			"}",
			"// старт вывода подменюшек",
			"function start_lvl(&$2output, $2depth = 0, $2args = array()) {",
			"// ул с классом",
			"$2output .= \"\n<ul class=\"dropdown-menu\">\n\";",
			"}",
			"// старт вывода элементов",
			"function start_el(&$2output, $2item, $2depth = 0, $2args = array(), $2id = 0) {",
			"// то что будет добавлять",
			"$2item_html = '';",
			"// вызываем стандартный метод родителя",
			"parent: :start_el($2item_html, $2item, $2depth, $2args);",
			"// если элемент содержит подменю и это элемент первого уровня",
			"if ( $2item->is_dropdown && $2depth === 0 ) {",
			"// если подменю не будет раскрывать при наведении надо добавить",
			"//стандартные атрибуты бутстрапа для раскрытия по клику",
			"if (!$2this->open_submenu_on_hover) $2item_html = str_replace('<a', '<a class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"', $2item_html);",
			"// ну это стрелочка вниз",
			"$2item_html = str_replace('</a>', ' <b class=\"caret\"></b></a>', $2item_html);",
			"}",
			"// приклеиваем теперь",
			"$2output .= $2item_html;",
			"}",
			"// вывод элемента",
			"function display_element($2element, &$2children_elements, $2max_depth, $2depth = 0, $2args, &$2output) {",
			"// если элемент активный надо добавить бутстрап класс для подсветки",
			"if ( $2element->current ) $2element->classes[] = 'active';",
			"$2element->is_dropdown = !empty( $2children_elements[$2element->ID",
			"]);",
			"// если у элемента подменю",
			"if ( $2element->is_dropdown ) {",
			"// если да",
			"if ( $2depth === 0 ) {",
			"// если li содержит субменю 1 уровня",
			"$2element->classes[] = 'dropdown';",
			"// то добавим этот класс",
			"// если нужно показывать субменю по хуверу",
			"if ($2this->open_submenu_on_hover) $2element->classes[] = 'show-on-hover';",
			"// если li содержит субменю 2 уровня",
			"} elseif ( $2depth === 1 ) {",
			"// то добавим этот класс, стандартный бутстрап не поддерживает подменю",
			"//больше 2 уровня по этому эту ситуацию надо будет разрешать отдельно",
			"$2element->classes[] = 'dropdown-submenu';",
			"}",
			"}",
			"// вызываем стандартный метод родителя",
			"parent: :display_element($2element, $2children_elements, $2max_depth, $2depth, $2args, $2output);",
			"}",
			"}",
			"}"
		],
		"description": "Добавление бутстрап меню"
	}
}